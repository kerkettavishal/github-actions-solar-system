name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          
        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v4.2.0
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test 
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage,
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: Install Dependencies
          run: npm install

        - name: Code Coverage
          continue-on-error: true
          run: npm run coverage


        - name: Upload code-coverage reports
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5 

    docker:
        name: Docker
        permissions: 
          packages: write
          actions: write
        needs: [code-coverage, unit-testing]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Docker Log in
          uses: docker/login-action@v3.3.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: |
             ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    dev-deploy:
      name: Deploy Dev ENV
      runs-on: ubuntu-latest
      needs: docker
      environment: development
      steps:
        
        - uses: actions/checkout@v4
        
        - uses: azure/setup-kubectl@v4
          with:
             version: 'v1.26.0'
          id: install
        - uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
            context: default

            
        - name: Set up Kubeconfig
          run: |
              mkdir -p $HOME/.kube
              echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
              chmod 600 $HOME/.kube/config
          
        - name: PRINT
          run: |
            ls -la ~

        - name: Check kubectl
          run: kubectl version -o yaml

        - name: Ingress IP
          run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")"" >> $GITHUB_ENV

        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
              NAMESPACE: ${{ secrets.NAMESPACE }}  
              REPLICAS: ${{ secrets.REPLICAS }}
              IMAGE: ghcr.io/${{ github.repository_owner }}solar-system:${{ github.sha }}
              INGRESS_IP: ${{ env.INGRESS_IP }}
        
              
        - name: Check files
          run: |
            cat kubernetes/development/*.yaml